{"version":3,"sources":["components/Header.js","components/Sort.js","components/Search.js","components/Control.js","components/Form.js","components/Item.js","components/List.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Sort","handleNameASC","handleNameDESC","handleLevelASC","handleLevelDESC","onClick","Search","handleSearch","handleClear","searchString","type","value","placeholder","onChange","Control","Form","edit","form","name","level","handleName","handleLevel","handleSubmit","handleToggleForm","onSubmit","required","Item","tasks","handleDelete","handleEdit","CheckLevel","style","map","task","key","id","marginRight","List","MainContent","useState","setTask","setName","setLevel","setId","setForm","setEdit","setSearchString","e","target","sorttask","sort","a","b","preventDefault","newEditTask","item","newTask","parseInt","console","log","filter","toLowerCase","indexOf","eTask","find","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7521efb3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header(){\r\n    return(\r\n        <div className=\"page-header\">\r\n            <h1>Project 01 - ToDo List <small>ReactJs</small></h1>\r\n            <hr className=\"my-4\"/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Sort({\r\n    handleNameASC,\r\n    handleNameDESC,\r\n    handleLevelASC,\r\n    handleLevelDESC\r\n}){\r\n    return(\r\n        <div className=\"form-group\">\r\n            <span className=\"badge badge-success badge-medium\" onClick={handleNameASC}>Name ASC</span>\r\n            <span className=\"badge badge-primary badge-medium\" onClick={handleNameDESC}>Name DESC</span>\r\n            <span className=\"badge badge-danger badge-medium\" onClick={handleLevelASC}>Level ASC</span>\r\n            <span className=\"badge badge-dark badge-medium\" onClick={handleLevelDESC}>Level DESC</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Search({handleSearch,handleClear,searchString}){\r\n    return(\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"form-control\" value={searchString} placeholder=\"Search for...\" onChange={handleSearch}/>\r\n            <span className=\"input-group-append\">\r\n                <button className=\"btn btn-info\" type=\"button\" onClick={handleClear}>Clear!</button>\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Sort from './Sort';\r\nimport Search from './Search';\r\n\r\nexport default function Control({\r\n    handleClear, \r\n    handleSearch,\r\n    searchString,\r\n    handleNameASC,\r\n    handleNameDESC,\r\n    handleLevelASC,\r\n    handleLevelDESC\r\n}){\r\n    return(\r\n        <div className=\"col-12 col-lg-6\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <Sort \r\n                        handleNameASC={handleNameASC} \r\n                        handleNameDESC={handleNameDESC}\r\n                        handleLevelASC={handleLevelASC}   \r\n                        handleLevelDESC={handleLevelDESC} \r\n                    />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Search \r\n                    searchString={searchString}\r\n                        handleSearch={handleSearch}\r\n                        handleClear={handleClear}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\n\r\nexport default function Form({\r\n    edit,\r\n    form,\r\n    name,\r\n    level,\r\n    handleName,\r\n    handleLevel,\r\n    handleSubmit,\r\n    handleToggleForm\r\n}){\r\n\r\n    return (\r\n        <div className=\"col-12 col-lg-6\">\r\n            <div className=\"form-group add-task\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-info btn-block\"\r\n                    onClick={handleToggleForm}\r\n                >{form ?'Close Form' : 'Open add form'}</button>\r\n            </div>\r\n\r\n            {\r\n                form &&  <form onSubmit={handleSubmit} className=\"form-inline justify-content-between\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"sr-only\">label</label>\r\n                    <input\r\n                        value={name} \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Task Name\" \r\n                        name=\"nameTask\"\r\n                        onChange={handleName}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"sr-only\" >label</label>\r\n                    <select\r\n                        value={level}\r\n                        name=\"ds\" \r\n                        className=\"form-control\" \r\n                        required=\"required\"\r\n                        onChange={handleLevel}\r\n                        >\r\n                        <option value=\"1\">Small</option>\r\n                        <option value=\"2\">Medium</option>\r\n                        <option value=\"3\">High</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">{edit?'Edit':'Submit'}</button>\r\n            </form>\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Item({tasks,handleDelete,handleEdit}){\r\n\r\n    function CheckLevel(level){\r\n        if(level === 1)\r\n        {\r\n            return {name : 'Small' , style :\"badge badge-danger\"};\r\n        }else if(level === 2)\r\n        {\r\n            return {name:'Medium' , style : \"badge badge-primary\"};\r\n        }\r\n        return {name:'High', style :\"badge badge-success\"};\r\n\r\n    }\r\n    return(\r\n        <tbody>\r\n            {\r\n                tasks.map(task => {\r\n                    return <tr key={task.id}>\r\n                                <td className=\"text-center\">{task.id}</td>\r\n                                <td>{task.name}</td>\r\n                                <td className=\"text-center\"><span className={CheckLevel(task.level).style}>{CheckLevel(task.level).name}</span></td>\r\n                                <td>\r\n                                    <button \r\n                                        type=\"button\" className=\"btn btn-warning\" \r\n                                        style={{marginRight:5}} onClick={()=>handleEdit(task.id)}\r\n                                    >Edit</button>\r\n                                    <button \r\n                                        type=\"button\" className=\"btn btn-danger\" \r\n                                        onClick={()=>{handleDelete(task.id)}}\r\n                                    >Delete</button>\r\n                                </td>\r\n                            </tr>  \r\n                })\r\n            }      \r\n        </tbody>\r\n        \r\n    )\r\n}","import React from 'react';\r\nimport Item from './Item';\r\n\r\nexport default function List({tasks,handleDelete,handleEdit}){\r\n    return (\r\n        <div className=\"panel panel-success\">\r\n            <div className=\"panel-heading\">List Task</div>\r\n            <table className=\"table table-hover \">\r\n                <thead>\r\n                    <tr>\r\n                        <th >#</th>\r\n                        <th>Task</th>\r\n                        <th>Level</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <Item \r\n                    tasks = {tasks}\r\n                    handleEdit={handleEdit}\r\n                    handleDelete={handleDelete}\r\n                />\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React,{useState, useEffect} from 'react';\r\nimport Control from './Control';\r\nimport Form from './Form';\r\nimport List from './List';\r\n\r\nexport default function MainContent(){\r\n    const data = [\r\n        {\r\n            id : 1,\r\n            name :'Học Lập Trình FrontEnd thầy Lực',\r\n            level : 1 \r\n        },\r\n        {\r\n            id : 2,\r\n            name :'Lập Trình Reactjs thầy Lực',\r\n            level : 2 \r\n        },\r\n        {\r\n            id : 3,\r\n            name :'BackEnd thầy Lực',\r\n            level : 3 \r\n        }\r\n    ];\r\n\r\n    const [tasks,setTask] = useState(data);\r\n    const [name,setName] = useState('');\r\n    const [level,setLevel] = useState(1);\r\n    const [id,setId]= useState(3);\r\n    const [form,setForm] = useState(false);\r\n    const[edit,setEdit] = useState(false);\r\n    const [searchString, setSearchString]=useState('');\r\n\r\n    const[sortNameASC, setSortNameASC]= useState('');\r\n\r\n    const handleNameASC = ()=>{\r\n        let sorttask =[...tasks.sort((a,b)=>{\r\n            if(a.name > b.name) return 1;\r\n            else if (a.name < b.name) return -1;\r\n            else return 0;\r\n        })]\r\n        setTask(sorttask);\r\n    }\r\n\r\n    const handleNameDESC = ()=>{\r\n        let sorttask =[...tasks.sort((a,b)=>{\r\n            if(a.name > b.name) return -1;\r\n            else if (a.name < b.name) return 1;\r\n            else return 0;\r\n        })]\r\n        setTask(sorttask);\r\n    }\r\n\r\n    const handleLevelASC =()=>{\r\n        let sorttask=[...tasks.sort((a,b)=>{\r\n            if(a.level > b.level) return 1;\r\n            else if (a.level < b.level) return -1;\r\n            else return 0;\r\n        })]\r\n        setTask(sorttask);\r\n    }\r\n\r\n    const handleLevelDESC =()=>{\r\n        let sorttask=[...tasks.sort((a,b)=>{\r\n            if(a.level > b.level) return -1;\r\n            else if (a.level < b.level) return 1;\r\n            else return 0;\r\n        })]\r\n        setTask(sorttask);\r\n    }\r\n\r\n    const handleSearch = (e)=>{      \r\n      setSearchString(e.target.value);\r\n    }\r\n\r\n    const handleClear = ()=>{\r\n        setSearchString('');\r\n    }\r\n\r\n    const handleToggleForm = ()=>{\r\n        if(form === false){\r\n            setForm(true)\r\n        }else{\r\n            setForm(false)\r\n        }\r\n    }\r\n\r\n    const handleName = (e)=>{\r\n        setName(e.target.value);\r\n    }\r\n    const handleLevel = (e)=>{\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleSubmit= (e)=>{\r\n        e.preventDefault();\r\n        if(edit){\r\n            let newEditTask = tasks.map(item=>{\r\n                return item.id===id ? {...item,name,level} : item\r\n            })\r\n            setTask(newEditTask);\r\n            setEdit(false);\r\n        }else{\r\n            const newTask = {\r\n                id : id+1,\r\n                name,\r\n                level : parseInt(level)\r\n            }\r\n            console.log(newTask);\r\n            setTask([...tasks,newTask]);\r\n            setId(newTask.id);\r\n        }\r\n        setName('');\r\n        setLevel('');\r\n        \r\n    }\r\n\r\n    const handleDelete = id =>{\r\n        let task = tasks.filter(item =>{\r\n            return item.id !== id\r\n        })\r\n        console.log(task);\r\n        setTask(task);\r\n    }\r\n\r\n    const handleEdit = id =>{\r\n        setForm(true);\r\n        let eTask = tasks.find(item=>{\r\n            return item.id === id\r\n        });\r\n       let { name , level} = eTask ;\r\n       setName(name);\r\n       setLevel(level);\r\n       setEdit(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <Control \r\n                    handleSearch={handleSearch}\r\n                    searchString={searchString}\r\n                    handleClear={handleClear}\r\n                    handleNameASC={handleNameASC}\r\n                    handleNameDESC={handleNameDESC}\r\n                    handleLevelASC={handleLevelASC}\r\n                    handleLevelDESC={handleLevelDESC}\r\n                />\r\n                <Form \r\n                    edit={edit}\r\n                    form={form}\r\n                    name={name}\r\n                    level={level}\r\n                    handleName={handleName}\r\n                    handleLevel={handleLevel}\r\n                    handleSubmit={handleSubmit}\r\n                    handleToggleForm={handleToggleForm}\r\n                />\r\n            </div>\r\n            <List \r\n                tasks={tasks.filter(item=>{\r\n                    return item.name.toLowerCase().indexOf(searchString) !== -1;\r\n                })}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n            />\r\n        </>\r\n    )\r\n}","\nimport React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport MainContent from './components/MainContent';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header/>\n      <MainContent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/style.css';\nimport './assets/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}